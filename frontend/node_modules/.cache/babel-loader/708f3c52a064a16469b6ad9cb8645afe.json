{"ast":null,"code":"var _jsxFileName = \"/home/maxfrolow/Edu/Lesson 2 - User Manager/user-manager/src/Editing/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport Context from '../context';\nimport Nav from 'react-bootstrap/Nav';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const {\n    createUser\n  } = useContext(Context);\n  const [show, setShow] = useState(false);\n  const [edditedUser, setEdditedUser] = useState({\n    id: \"12\",\n    name: \"\",\n    lastname: \"\",\n    age: \"\",\n    gender: \"Male\"\n  });\n\n  function handleClose() {\n    this.setState({\n      show: false\n    });\n  }\n\n  ;\n\n  function handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  ;\n\n  function saveAndClose(userObj) {\n    createUser(userObj);\n    handleClose();\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n          href: \"#features\",\n          onClick: handleShow,\n          children: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.show,\n          onHide: handleClose,\n          animation: true,\n          size: \"lg\",\n          \"aria-labelledby\": \"contained-modal-title-vcenter\",\n          centered: true,\n          className: \"modal-edited\",\n          children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formBasicName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    defaultValue: this.state.edditedUser.name,\n                    onChange: event => this.state.edditedUser.name = event.target.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                    className: \"text-muted\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formBasicName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Lastname\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    defaultValue: this.state.edditedUser.lastname,\n                    onChange: event => this.state.edditedUser.lastname = event.target.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                    className: \"text-muted\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formBasicName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Age\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    defaultValue: this.state.edditedUser.age,\n                    onChange: event => this.state.edditedUser.age = event.target.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                    className: \"text-muted\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formBasicName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Gender\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    defaultValue: this.state.edditedUser.gender,\n                    onChange: event => this.state.edditedUser.gender = event.target.value,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Male\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Female\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Something Else\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: saveAndClose.bind(null, this.state.edditedUser),\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Create, \"t04YsC6IFx5B/So7VEj0tTHV7rY=\");\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/maxfrolow/Edu/Lesson 2 - User Manager/user-manager/src/Editing/Create.js"],"names":["React","useContext","useState","Context","Nav","Modal","Button","Form","Col","Create","createUser","show","setShow","edditedUser","setEdditedUser","id","name","lastname","age","gender","handleClose","setState","handleShow","saveAndClose","userObj","state","event","target","value","bind"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;;AAGC,eAAe,SAASC,MAAT,GAAiB;AAAA;;AACzB,QAAM;AAACC,IAAAA;AAAD,MAAeT,UAAU,CAACE,OAAD,CAA/B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC;AACvCa,IAAAA,EAAE,EAAE,IADmC;AAEvCC,IAAAA,IAAI,EAAE,EAFiC;AAGvCC,IAAAA,QAAQ,EAAE,EAH6B;AAIvCC,IAAAA,GAAG,EAAE,EAJkC;AAKvCC,IAAAA,MAAM,EAAE;AAL+B,GAAD,CAA9C;;AAUA,WAASC,WAAT,GAAuB;AAAC,SAAKC,QAAL,CAAc;AAACV,MAAAA,IAAI,EAAE;AAAP,KAAd;AAA6B;;AAAA;;AACrD,WAASW,UAAT,GAAuB;AAAC,SAAKD,QAAL,CAAc;AAACV,MAAAA,IAAI,EAAC;AAAN,KAAd;AAA2B;;AAAA;;AACnD,WAASY,YAAT,CAAsBC,OAAtB,EAA8B;AAC1Bd,IAAAA,UAAU,CAACc,OAAD,CAAV;AACAJ,IAAAA,WAAW;AAIf,wBAEI,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI;AAAA,gCACI,QAAC,GAAD,CAAK,IAAL;AAAU,UAAA,IAAI,EAAC,WAAf;AAA2B,UAAA,OAAO,EAAEE,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,KAAKG,KAAL,CAAWd,IAAxB;AACO,UAAA,MAAM,EAAES,WADf;AAEO,UAAA,SAAS,EAAE,IAFlB;AAGO,UAAA,IAAI,EAAC,IAHZ;AAIO,6BAAgB,+BAJvB;AAKO,UAAA,QAAQ,MALf;AAKgB,UAAA,SAAS,EAAC,cAL1B;AAAA,kCAOI,QAAC,KAAD,CAAO,IAAP;AAAA,mCACI,QAAC,IAAD;AAAA,sCACI,QAAC,IAAD,CAAM,GAAN;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAEZ,GAAhB;AAAqB,kBAAA,SAAS,EAAC,eAA/B;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,YAAY,EAAE,KAAKiB,KAAL,CAAWZ,WAAX,CAAuBG,IAA/D;AAAqE,oBAAA,QAAQ,EAAEU,KAAK,IAAI,KAAKD,KAAL,CAAWZ,WAAX,CAAuBG,IAAvB,GAA8BU,KAAK,CAACC,MAAN,CAAaC;AAAnI;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eASI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAEpB,GAAhB;AAAqB,kBAAA,SAAS,EAAC,eAA/B;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,YAAY,EAAE,KAAKiB,KAAL,CAAWZ,WAAX,CAAuBI,QAA/D;AAAyE,oBAAA,QAAQ,EAAES,KAAK,IAAI,KAAKD,KAAL,CAAWZ,WAAX,CAAuBI,QAAvB,GAAkCS,KAAK,CAACC,MAAN,CAAaC;AAA3I;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAmBI,QAAC,IAAD,CAAM,GAAN;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAEpB,GAAhB;AAAqB,kBAAA,SAAS,EAAC,eAA/B;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,YAAY,EAAE,KAAKiB,KAAL,CAAWZ,WAAX,CAAuBK,GAA/D;AAAoE,oBAAA,QAAQ,EAAEQ,KAAK,IAAI,KAAKD,KAAL,CAAWZ,WAAX,CAAuBK,GAAvB,GAA6BQ,KAAK,CAACC,MAAN,CAAaC;AAAjI;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAQI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAEpB,GAAhB;AAAqB,kBAAA,SAAS,EAAC,eAA/B;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,EAAE,EAAC,QAAjB;AAA0B,oBAAA,YAAY,EAAE,KAAKiB,KAAL,CAAWZ,WAAX,CAAuBM,MAA/D;AAAuE,oBAAA,QAAQ,EAAEO,KAAK,IAAI,KAAKD,KAAL,CAAWZ,WAAX,CAAuBM,MAAvB,GAAgCO,KAAK,CAACC,MAAN,CAAaC,KAAvI;AAAA,4CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ,eA8CI,QAAC,KAAD,CAAO,MAAP;AAAA,oCACA,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,OAAO,EAAER,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAIA,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,OAAO,EAAEG,YAAY,CAACM,IAAb,CAAkB,IAAlB,EAAwB,KAAKJ,KAAL,CAAWZ,WAAnC,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAiEC;AAAC;;GAtFeJ,M;;KAAAA,M","sourcesContent":["import React, {useContext, useState} from 'react'\nimport Context from '../context'\n\nimport Nav from 'react-bootstrap/Nav'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\n\n\n export default function Create(){\n        const {createUser} = useContext(Context)\n        const [show, setShow] = useState(false)\n        const [edditedUser, setEdditedUser] = useState({\n                id: \"12\",\n                name: \"\",\n                lastname: \"\",\n                age: \"\",\n                gender: \"Male\",\n        })\n            \n    \n\n        function handleClose (){this.setState({show: false})};\n        function handleShow () {this.setState({show:true})};\n        function saveAndClose(userObj){\n            createUser(userObj)\n            handleClose()\n        \n\n\n        return(\n            \n            <React.Fragment>   \n                <>\n                    <Nav.Link href=\"#features\" onClick={handleShow}>Create User</Nav.Link>\n\n                    <Modal show={this.state.show} \n                           onHide={handleClose} \n                           animation={true}\n                           size=\"lg\" \n                           aria-labelledby=\"contained-modal-title-vcenter\" \n                           centered className=\"modal-edited\">\n                        \n                        <Modal.Body>\n                            <Form>\n                                <Form.Row>    \n                                    <Form.Group as={Col} controlId=\"formBasicName\">\n                                        <Form.Label>Name</Form.Label>\n                                        <Form.Control type=\"text\" defaultValue={this.state.edditedUser.name} onChange={event => this.state.edditedUser.name = event.target.value}/>\n                                        <Form.Text className=\"text-muted\">\n                                        \n                                        </Form.Text>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formBasicName\">\n                                        <Form.Label>Lastname</Form.Label>\n                                        <Form.Control type=\"text\" defaultValue={this.state.edditedUser.lastname} onChange={event => this.state.edditedUser.lastname = event.target.value}/>\n                                        <Form.Text className=\"text-muted\">\n                                        \n                                        </Form.Text>\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formBasicName\">\n                                        <Form.Label>Age</Form.Label>\n                                        <Form.Control type=\"text\" defaultValue={this.state.edditedUser.age} onChange={event => this.state.edditedUser.age = event.target.value}/>\n                                        <Form.Text className=\"text-muted\">\n                                        \n                                        </Form.Text>\n                                    </Form.Group>\n                                    <Form.Group as={Col} controlId=\"formBasicName\">\n                                        <Form.Label>Gender</Form.Label>\n                                        <Form.Control as=\"select\" defaultValue={this.state.edditedUser.gender} onChange={event => this.state.edditedUser.gender = event.target.value}>\n                                            <option>Male</option>\n                                            <option>Female</option>\n                                            <option>Something Else</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Form.Row>\n                                </Form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={saveAndClose.bind(null, this.state.edditedUser)}>\n                            Save Changes\n                        </Button>\n                        </Modal.Footer>\n                    </Modal>\n                    </>\n                \n            </React.Fragment>\n)\n        }}\n\n"]},"metadata":{},"sourceType":"module"}